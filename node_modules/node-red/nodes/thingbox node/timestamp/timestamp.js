
module.exports = function(RED) {

	function TimestampNode(n) {

		RED.nodes.createNode(this,n);
		
		this.format = n.format;
		this.shift = n.shift;
		
		this.on("input", function(msg) {
		
			var topic = msg.topic;
			var payload = msg.payload;
			var time;
			
			var date = new Date();
			var shift = date.getUTCHours() - date.getHours();
			var time_shift = Date.now() + (shift*3600000);
			
			var date_jetlag = new Date(time_shift);
			
			if (this.shift == "gmt") {
				switch(this.format) {
					case("basic"): time = time_shift; break;
					case("date"): time = date_jetlag.toLocaleDateString(); break;
					case("time"): time = date_jetlag.toLocaleTimeString(); break;
					case("iso"): time = date.toISOString(); break;
				}
			} else if (this.shift == "shift") {
				switch(this.format) {
					case("basic"): time = Date.now(); break;
					case("date"): time = date.toLocaleDateString(); break;
					case("time"): time = date.toLocaleTimeString(); break;
					case("iso"): time = (new Date(Date.now() - (shift*3600000))).toISOString(); break;
				}
			}
			
			var msg = {topic:topic,payload:payload,timestamp:time};
			this.send(msg);
		});
	}

	RED.nodes.registerType("timestamp",TimestampNode);	
}