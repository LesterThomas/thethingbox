module.exports = function(RED) {
    var fs = require('fs');
    var ejs = require('ejs');

    function InterfacesNode(n) {
        RED.nodes.createNode(this,n);
        this.name = n.name;
        
		
        this.on("input", function(msg) {
		console.log("new message !");
            if (msg != null) {
            	if (msg.payload != null) {
            		if (msg.payload.iface != null) {
			            try {
			                
			              editInterfacesFile(msg.payload);
			                
			            } catch(err) {
			                this.error(err.message);
			            }
            		}
        		}
            }
        });
    }
    
    
    
    function editInterfacesFile(payload) {
    	
       var file = {name: "/etc/network/interfaces"};

    	
    	fs.readFile(file.name, {encoding:'utf8'}, function (err, data) {
    		
    		file.content = data;
    		
    		if(payload.iface === "eth0"){
    			setEth0(file, payload);
    		}
    		else if(payload.iface === "wlan0"){
    			setWlan0(file, payload);
    		}
    		
    	    
    	    fs.writeFile(file.name, file.content, {
    	    	encoding : 'utf8',
    	    	flag : 'w'
    	    }, function(err) {
    	    	if (err)
    	    		console.log(err);
    	    });    
    	    
    	});
    }
    

    function setEth0(file, payload){
    	
    	var conf;
    	if(payload.type === "static"){
    		conf = "###eth0:\nallow-hotplug eth0\niface eth0 inet static\n\taddress "+payload.ip+"\n\tnetmask "+payload.netmask+"\n\tgateway "+payload.gateway+"\n###:eth0";
    	}
    	else if(payload.type === "dynamic"){
    		conf = "###eth0:\n##### conf is made by network-manager\n#auto eth0\n#allow-hotplug eth0\n#iface eth0 inet dhcp\n###:eth0";
    	}
    		file.content = file.content.replace(/###eth0:([\s\S]*?)###:eth0/g, conf);
    }
    
    function setWlan0(file, payload){
    	var conf;
    	if(payload.type === "static"){
    		conf = "###wlan0:\nallow-hotplug wlan0\niface wlan0 inet static\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n\taddress "+payload.ip+"\n\tnetmask "+payload.netmask+"\n\tgateway "+payload.gateway+"\n###:wlan0";
    	}
    	else if(payload.type === "dynamic"){
    		conf = "###wlan0:\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n###:wlan0";
    	}
    	file.content = file.content.replace(/###wlan0:([\s\S]*?)###:wlan0/g, conf);
    }

    

    RED.nodes.registerType("interfaces",InterfacesNode);
}
